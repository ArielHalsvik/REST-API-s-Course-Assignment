{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Todo API",
    "description": "A simple Express API to manage todos"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Signs in a user with a correct email and password. Returns a token for the user to use for authentication. Paste this in the Authorization header to access other endpoints with this format: \"Bearer: \" + token.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/signup": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Creates a new user.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserSignup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/todos/": {
      "get": {
        "tags": [
          "Todos"
        ],
        "description": "Gets all todos except the deleted ones for the logged in user.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Todos"
        ],
        "description": "Creates a new todo.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Todo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/todos/all": {
      "get": {
        "tags": [
          "Todos"
        ],
        "description": "Gets all todos for the logged in user.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/todos/deleted": {
      "get": {
        "tags": [
          "Todos"
        ],
        "description": "Gets all deleted todos for the logged in user.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/todos/statuses": {
      "get": {
        "tags": [
          "Todos"
        ],
        "description": "Gets all statuses.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/todos/{id}": {
      "put": {
        "tags": [
          "Todos"
        ],
        "description": "Changes a specific todo. You need at least one of the following fields: name, description, category, status.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Todo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Todos"
        ],
        "description": "Deletes a specific todo.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/categories/": {
      "get": {
        "tags": [
          "Categories"
        ],
        "description": "Gets all categories for the logged in user.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "description": "Creates a new category.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/categories/{id}": {
      "put": {
        "tags": [
          "Categories"
        ],
        "description": "Updates a specific category for the logged in user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "description": "Deletes a specific category for the logged in user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "Category": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Shopping"
        }
      },
      "required": [
        "name"
      ]
    },
    "Status": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "Not started"
        }
      },
      "required": [
        "status"
      ]
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "johnd0e@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "p4ssw0rd"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "UserSignup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "example": "johnd0e@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "p4ssw0rd"
        }
      },
      "required": [
        "name",
        "email",
        "password"
      ]
    },
    "Todo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Buy groceries"
        },
        "description": {
          "type": "string",
          "example": "Buy milk, bread, and eggs"
        },
        "categoryId": {
          "type": "string",
          "example": "1"
        },
        "statusId": {
          "type": "string",
          "example": "1"
        }
      },
      "required": [
        "name",
        "description",
        "categoryId",
        "statusId"
      ]
    }
  }
}